[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ticketplease"
version = "0.1.0"
description = "CLI assistant for generating standardized task descriptions using AI"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Kus CÃ¡mara", email = "kus.camara@gmail.com"}
]
keywords = ["cli", "ai", "jira", "github", "task-generation"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]
requires-python = ">=3.10"
dependencies = [
    "typer>=0.9.0",
    "rich>=13.0.0",
    "questionary>=2.0.0",
    "litellm>=1.0.0",
    "pyperclip>=1.8.0",
    "toml>=0.10.0",
    "keyring>=24.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "pre-commit>=3.0.0",
]

[project.scripts]
tkp = "ticketplease.cli:app"

[project.urls]
Homepage = "https://github.com/kcmr/ticket-please"
Repository = "https://github.com/kcmr/ticket-please"
Issues = "https://github.com/kcmr/ticket-please/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/ticketplease"]

[tool.ruff]
target-version = "py310"
line-length = 100

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-first-party = ["ticketplease"]



[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["src/ticketplease"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "types-pyperclip>=1.9.0.20250218",
    "types-toml>=0.10.8.20240310",
]
